
import java.util.*;


import java.text.*;


public class WebAccessUnit extends DefinedData {
	
	String WebAccessUnitState;
	String target;
	TradePageManagerUnit_Monex TradePageManager; //交易股票的所有網業開啟 
	CatchException TradePageManager_catchException;
	
	TimeStar TradePadeUpdateTask;
	java.util.Timer TradePadeUpdateTimer;
	
	Calendar rightNow;
	
	WebAccessUnit(String target, BoardInfo BoardInfo){ //initialization
		//1秒截取數據一次
		WebAccessUnitState = "PREPARE";
		this.target = target;
		System.out.println( target +" WebAccessUnit Activating" );
		
		//TradePageManager = new TradePageManagerUnit(target);
		TradePageManager = new TradePageManagerUnit_Monex(target, BoardInfo);
		TradePageManager_catchException = new CatchException();
		TradePageManager.setName("Thread-TradePageManager-"+target);
		TradePageManager.setUncaughtExceptionHandler(TradePageManager_catchException);
		
		TradePadeUpdateTask= new TimeStar();
		TradePadeUpdateTimer= new java.util.Timer();
		TradePadeUpdateTimer.schedule(TradePadeUpdateTask,0,1000);
		
		while(!TradePageManager.TradePageManagerUnitState.equals("READY")){ //Wait for being triggered 
			try{
				Thread.sleep(100);
			}catch (InterruptedException e){
			}
		}
		TradePageManager.start();  // start tradepage operation 
		WebAccessUnitState = "READY";
		System.out.println( target + " WebAccessUnit Ready" );
	}
	
	public void run(){
		
		System.out.println( "WebAccessUnit Standby" );
		while(!WebAccessUnitState.equals("END")){
			switch(WebAccessUnitState){
			
			case "READY":
				//System.out.println( "WebAccessUnit READY");
				break;	
			case "START":	
				TradePageManager.TradePageManagerUnitState = "START";	
				//System.out.println( "WebAccessUnit START");
				break;
			case "PAUSE":
				//System.out.println( "WebAccessUnit PAUSE");
				break;
			case "FINISHING":	
				//System.out.println( "WebAccessUnit FINISH");
				
				TradePageManager.TradePageManagerUnitState = "FINISHING";	
				System.out.println( "WebAccessUnit FINISHING	" + target );
				while(!TradePageManager.TradePageManagerUnitState.equals("END")){
					try{
						Thread.sleep(10);
					}catch (InterruptedException e){
					}
				}
				TradePadeUpdateTimer.cancel();
				WebAccessUnitState="END";
				break;
				
			case "ERROR":	
				//System.out.println( "WebAccessUnit ERROR");
				break;
				
			}	
			try{
				Thread.sleep(500);
			}catch (InterruptedException e){
			}	
		}	
		System.out.println( "WebAccessUnit END	" + target );
		//start any web access process  
	}
	
	class TimeStar extends TimerTask {  //data update per second
	    public void run() {
	    	
			//Date Now = new Date();
			//SimpleDateFormat D = new SimpleDateFormat("yyyy/MM/dd	HH:mm:ss");
	    	//rightNow = Calendar.getInstance(); 
	    	//Now = rightNow.getTime(); 
	    	
	    	//TradePageManager.BoardInfo.time = D.format(Now);
	    
			switch(WebAccessUnitState){
			case "READY":
				break;	
			case "START":			
				break;
			case "PAUSE":
				break;
			case "FINISHING":	
				break;
			case "ERROR":	
				break;		
			}	
			try{
				Thread.sleep(500);
			}catch (InterruptedException e){
			}
	    	//System.out.println(TradePageManager1.BoardInfo.time);
			//TradePageManager1.BoardInfo.Price = TradePageManager1.BoardInfo.TempPrice;
			//for (int i=0 ; i<19; i++){	
					//TradeLog.FileWrite(TradePageManager1.BoardInfo.Board[i][0] + " " +TradePageManager1.BoardInfo.Board[i][1]+ "	" +TradePageManager1.BoardInfo.Board[i][2]);
					//System.out.println(TradePageManager1.BoardInfo.Board[i][0] + "	"+TradePageManager1.BoardInfo.Board[i][1]+ "	" +TradePageManager1.BoardInfo.Board[i][2]);
			//}
	    }
	}
}
