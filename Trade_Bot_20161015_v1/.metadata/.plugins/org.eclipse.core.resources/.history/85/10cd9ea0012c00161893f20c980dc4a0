import java.util.*;
import java.text.*;


public class TradeOperatorUnit extends DefinedData{// 意思決定   Trade情報により、買、維持、売の行動　また価格を決める

	String ProcessName = "TradeOperatorUnit";
	String SimulationMode;
	String TradeOperatorUnitState;
	String target;
	
	BoardInfo BoardInfo;
	UserProperty UserProperty;
	TradeStatics TradeStatics;
	
	LogUnit TradeOperateLog; // create statics log file
	
	TradeOperatorUnit(String target,BoardInfo BoardInfo, UserProperty UserProperty,TradeStatics TradeStatics,String SimulationMode,String LogPath, int Speed){
		TradeOperatorUnitState = "PREPARE";
		System.out.println( target+ "	"+ProcessName+"_"+SimulationMode+"_"+"Activating" );
		
		this.SimulationMode = SimulationMode;
		this.target = target;
		
		this.BoardInfo = BoardInfo;
		this.UserProperty = UserProperty;
		
		TradeOperateLog = new LogUnit(LogPath,this.target+"Trade",0); // create log file
		
		
		TradeOperatorUnitState = "READY";
		System.out.println(target+ "	"+ProcessName+"_"+SimulationMode+"_"+"Ready" );	
	}
		
	public void run(){ 
		System.out.println(target+ "	"+ProcessName+"_"+SimulationMode+"_"+"Standby" );
		String PreState = TradeOperatorUnitState;
		while(!TradeOperatorUnitState.equals("END")){
			switch(TradeOperatorUnitState){
			
			case "READY":
				
				break;	
			case "START":	
				if (PreState.equals("READY")){
					//初回のプロセスの起動に使う
					PreState = TradeOperatorUnitState;
					System.out.println(target+ "	"+ProcessName+"_"+SimulationMode+"_"+"Start");
				}	
				
				if(UserProperty.UserAction.Action.equals("BUY")){
					synchronized (UserProperty.UserPropertyLock){
						UserProperty.cash = UserProperty.cash - UserProperty.UserAction.Price;
						UserProperty.Holded = "HOLDED";
						UserProperty.UserAction.Action = "NONE";
						
						String temp  = BoardInfo.Date + "	" +BoardInfo.time + "	" + UserProperty.cash + "	"+UserProperty.UserAction.Price+"\r\n";						
						TradeOperateLog.FileWrite(temp);
						System.out.println("Buy Price="+UserProperty.UserAction.Price + " Cash = " +UserProperty.cash);
						
					}
				} 
				else if(UserProperty.UserAction.Action.equals("SELL")){
					synchronized (UserProperty.UserPropertyLock){
						UserProperty.cash = UserProperty.cash + UserProperty.UserAction.Price;
						UserProperty.UserAction.Action = "NONE";
						UserProperty.Holded = "NONE";
						String temp  = BoardInfo.Date + "	" +BoardInfo.time + "	" + UserProperty.cash + "	"+UserProperty.UserAction.Price+"\r\n";						
						TradeOperateLog.FileWrite(temp);
						System.out.println("Sell Price="+UserProperty.UserAction.Price + " Cash = " +UserProperty.cash);
					}
				}
			
				
				System.out.println( target+ "	"+ProcessName+"_"+SimulationMode+"_"+"Start");
				break;
			case "PAUSE":
				//System.out.println( "TradeOperatorUnit PAUSE");
				break;
			case "FINISHING":
				//---------------気配板プロセスの完了待つ-----------------------------	
				/*while(!XXXX.equals("END")){
					try{
						Thread.sleep(10);
					}catch (InterruptedException e){
					}
				}*/
				//System.out.println( "TradeOperatorUnit FINISH");
				TradeOperatorUnitState = "END";
				break;
			case "ERROR":	
				//System.out.println( "TradeOperatorUnit ERROR");
				break;
				
			}	
			try{
				Thread.sleep(500);
			}catch (InterruptedException e){
			}	
		}		
		System.out.println(target+ "	"+ProcessName+"_"+SimulationMode+"_"+"End" );
		//start any web access process 
	}

}